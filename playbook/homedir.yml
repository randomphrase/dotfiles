---
- name: Git config
  hosts: all localhost
  tasks:

    - name: install git from apt
      apt:
        name: git
      become: yes
      when: ansible_pkg_mgr == 'apt'
    - name: set git email
      git_config:
        name: user.email
        value: "alastair@girtby.net"
        scope: global
    - name: set git name
      git_config:
        name: user.name
        value: "Alastair Rankine"
        scope: global
    - name: set github user name
      git_config:
        name: github.user
        value: "randomphrase"
        scope: global
    - name: set pull.rebase
      git_config:
        name: pull.rebase
        value: "True"
        scope: global
    - name: install delta from homebrew
      homebrew:
        name: git-delta
      when: ansible_pkg_mgr == 'homebrew'
    - name: set git-delta config
      git_config:
        name: "{{item.key}}"
        value: "{{item.value}}"
        scope: global
      loop: "{{ git_delta_config | dict2items }}"
      vars:
        git_delta_config:
          core.pager: delta
          interactive.diffFilter: "delta --color-only"
          delta.navigate: "true"
          delta.light: "false"

- name: Dotfiles
  hosts: all
  tasks:
    - name: clone dotfiles
      git:
        repo: git@github.com:randomphrase/dotfiles.git
        dest: ~/.dotfiles

- name: Zsh
  hosts: all localhost
  tasks:
    - name: install zsh
      apt:
        name: zsh
      become: yes
      when: ansible_pkg_mgr == 'apt'
    #- name: chsh zsh
    #  when: ansible_user_shell != "/usr/bin/zsh"
    #  command: chsh -s /usr/bin/zsh
    - name: clone oh-my-zsh
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh.git
        dest: ~/.zsh.d/oh-my-zsh
    - name: clone vterm plugin
      git:
        repo: https://github.com/randomphrase/vterm-zsh-plugin.git
        dest: ~/.zsh.d/oh-my-zsh/custom/plugins/vterm
    - name: symlinks
      file:
        dest: "~/.{{item}}"
        src: ".dotfiles/{{item}}"
        state: link
      loop:
        - zshrc
        - zshenv

- name: SSH config
  hosts: localhost
  tasks:
    - name: symlink .ssh/config
      file:
        dest: ~/.ssh/config
        src: ../.dotfiles/ssh/config
        state: link

- name: Tmux
  hosts: all localhost
  tasks:
    - name: install tmux from apt
      apt:
        name: tmux
      become: yes
      when: ansible_pkg_mgr == 'apt'
    - name: install tmux from homebrew
      homebrew:
        name: tmux
      when: ansible_pkg_mgr == 'homebrew'
    - name: symlink tmux.conf
      file:
        dest: ~/.tmux.conf
        src: .dotfiles/tmux.conf
        state: link
    - name: clone tmux package manager
      git:
        repo: https://github.com/tmux-plugins/tpm
        dest: ~/.tmux/plugins/tpm
    - name: check tmux plugins installed
      stat:
        path: ~/.tmux/plugins/tpm-sensible
      register: tpmpkg
    - name: install tmux plugins
      when: not tpmpkg.stat.exists
      command:
        cmd: ~/.tmux/plugins/tpm/bin/install_plugins
    - name: update tmux plugins
      when: tpmpkg.stat.exists
      command:
        cmd: ~/.tmux/plugins/tpm/bin/update_plugins

- name: Emacs
  hosts: all localhost
  tasks:
    - name: install snapd from apt
      apt:
        name: snapd
      become: yes
      when: ansible_pkg_mgr == 'apt'
    - name: install emacs from snap
      snap:
        name: emacs
        channel: beta
        classic: yes
      become: yes
      when: ansible_pkg_mgr == 'apt'
    - name: install emacs-plus from homebrew
      homebrew:
        name: emacs-plus
      when: ansible_pkg_mgr == 'homebrew'
    - name: install utilities from apt
      apt:
        name: clangd,ripgrep,sqlite3
      become: yes
      when: ansible_pkg_mgr == 'apt'
    - name: install utilities from homebrew
      homebrew:
        name: ripgrep
      when: ansible_pkg_mgr == 'homebrew'
    - name: clone spacemacs
      git:
        repo: https://github.com/syl20bnr/spacemacs.git
        version: develop
        dest: ~/.emacs.d
    - name: symlink .spacemacs.d
      file:
        dest: ~/.spacemacs.d
        src: .dotfiles/spacemacs.d
        state: link
    - name: install cmake
      snap:
        name: cmake
        classic: yes
      become: yes
      when: ansible_pkg_mgr == 'apt'

- name: bazelisk
  hosts: localhost
  tasks:
    - name: Install golang from apt
      apt:
        name: golang
      become: yes
      when: ansible_pkg_mgr == 'apt'
    - name: Install golang from homebrew
      homebrew:
        name: go
      when: ansible_pkg_mgr == 'homebrew'
    - name: Install bazelisk
      command:
        cmd: go install github.com/bazelbuild/bazelisk@latest
        creates: ~/go/bin/bazelisk
